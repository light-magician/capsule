services:
  capsule-integration:
    container_name: capsule-integration
    build:
      context: ..
      dockerfile: integration/Dockerfile
    tty: true # keeps stdin open for exec
    volumes:
      - ../agents:/capsule/agents
      - ../capsule:/capsule/capsule
#     depends_on:
#       supabase-db:
#         condition: service_healthy
#     environment:
#       - SUPABASE_DB_URL=postgresql://postgres:postgres@supabase-db:5432/postgres
#
#   # Supabase Database
#   supabase-db:
#     container_name: supabase-db
#     image: postgres:15
#     healthcheck:
#       test: pg_isready -U postgres -h localhost
#       interval: 5s
#       timeout: 5s
#       retries: 10
#     restart: unless-stopped
#     ports:
#       - '54322:5432'
#     environment:
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: postgres
#       POSTGRES_USER: postgres
#     volumes:
#       - supabase-db-data:/var/lib/postgresql/data
#       - ./supabase/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
#
#   # Supabase API Gateway
#   supabase-kong:
#     container_name: supabase-kong
#     image: kong:2.8.1
#     restart: unless-stopped
#     ports:
#       - '8000:8000/tcp'
#       - '8443:8443/tcp'
#     environment:
#       KONG_DATABASE: 'off'
#       KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
#       KONG_DNS_ORDER: LAST,A,CNAME
#       KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
#       KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
#       KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
#     volumes:
#       - ./supabase/kong.yml:/var/lib/kong/kong.yml:ro
#
#   # Supabase Auth
#   supabase-auth:
#     container_name: supabase-auth
#     image: supabase/gotrue:v2.143.0
#     depends_on:
#       supabase-db:
#         condition: service_healthy
#     healthcheck:
#       test:
#         [
#           'CMD',
#           'wget',
#           '--no-verbose',
#           '--tries=1',
#           '--spider',
#           'http://localhost:9999/health',
#         ]
#       timeout: 5s
#       interval: 5s
#       retries: 3
#     restart: unless-stopped
#     environment:
#       GOTRUE_API_HOST: 0.0.0.0
#       GOTRUE_API_PORT: 9999
#       API_EXTERNAL_URL: http://localhost:8000
#       GOTRUE_DB_DRIVER: postgres
#       GOTRUE_DB_DATABASE_URL: postgresql://supabase_auth_admin:postgres@supabase-db:5432/postgres
#       GOTRUE_SITE_URL: http://localhost:3000
#       GOTRUE_URI_ALLOW_LIST: ''
#       GOTRUE_DISABLE_SIGNUP: 'false'
#       GOTRUE_JWT_ADMIN_ROLES: service_role
#       GOTRUE_JWT_AUD: authenticated
#       GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
#       GOTRUE_JWT_EXP: 3600
#       GOTRUE_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
#
#   # Supabase REST API
#   supabase-rest:
#     container_name: supabase-rest
#     image: postgrest/postgrest:v12.0.1
#     depends_on:
#       supabase-db:
#         condition: service_healthy
#     restart: unless-stopped
#     environment:
#       PGRST_DB_URI: postgresql://authenticator:postgres@supabase-db:5432/postgres
#       PGRST_DB_SCHEMAS: public
#       PGRST_DB_ANON_ROLE: anon
#       PGRST_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
#       PGRST_DB_USE_LEGACY_GUCS: 'false'
#       PGRST_APP_SETTINGS_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
#       PGRST_APP_SETTINGS_JWT_EXP: 3600
#
#   # Supabase Studio (Web UI)
#   supabase-studio:
#     container_name: supabase-studio
#     image: supabase/studio:20240326-5e5586d
#     restart: unless-stopped
#     healthcheck:
#       test:
#         [
#           'CMD',
#           'node',
#           '-e',
#           "require('http').get('http://localhost:3000/api/profile', (r) => {if (r.statusCode !== 200) throw new Error(r.statusCode)})",
#         ]
#       timeout: 5s
#       interval: 5s
#       retries: 3
#     environment:
#       STUDIO_PG_META_URL: http://supabase-meta:8080
#       POSTGRES_PASSWORD: postgres
#       DEFAULT_ORGANIZATION_NAME: Default Organization
#       DEFAULT_PROJECT_NAME: Default Project
#       SUPABASE_URL: http://supabase-kong:8000
#       SUPABASE_PUBLIC_URL: http://localhost:8000
#       SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
#       SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
#
#   # Supabase Meta (Database metadata API)
#   supabase-meta:
#     container_name: supabase-meta
#     image: supabase/postgres-meta:v0.80.0
#     depends_on:
#       supabase-db:
#         condition: service_healthy
#     restart: unless-stopped
#     environment:
#       PG_META_PORT: 8080
#       PG_META_DB_HOST: supabase-db
#       PG_META_DB_PORT: 5432
#       PG_META_DB_NAME: postgres
#       PG_META_DB_USER: supabase_admin
#       PG_META_DB_PASSWORD: postgres
#
# volumes:
#   supabase-db-data:
